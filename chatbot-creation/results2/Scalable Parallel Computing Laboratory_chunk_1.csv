idea title,idea description,skills,difficulty,duration
Implementing selected optimizations,"At SPCL , we develop a programming framework that is geared towards optimizing the data movement behavior of applications , a factor that limits the performance and efficiency of many large , real-world applications.
DaCe , or the Data-Centric Parallel Programming Framework , takes code written in Python and other programming languages , and translates it to highly optimized CPU , GPU , or FPGA programs through the use of a graphical intermediate program representation.
This intermediate program representation exposes where a program moves how much data and allos a programmer to interactively optimize the application by applying simple , pre-defined \","C++ , network programming , cloud ( functions , object storage , databases ) , parallel algorithms",Medium/Difficult,350 hours ( large )
Data-Centric Programming,"High-performance programs can be represented as parametric graphs when using Data-Centric Parallel Programming . These graphs have a hierarchical structure , whereby control flow graphs are used to express control flow over parts of the application , and inside each basic block of a control flow graph a data flow graph represents the movement of data through an application . These graphs , also called SDFGs , can become very large and hard to read for bigger and more complex applications . Oftentimes an engineer may consequently prefer navigating the original source code , because they have additional meta information that tells them about a program ’ s behavior such as function or file names . This kind of information is naturally abstracted away in a representation such as SDFGs . In this project you will work on implementing named control flow groups or regions that can be used to carry over some of the information from source code representations into the SDFG representation . By annotating an SDFG with more source code information such as function or procedure names , an engineer can obtain more contextual clues while navigating a program ’ s data flow graph which can drastically help their optimization or problem solving efforts.","Python , Javscript/Typescript , basic understanding of graph theory",Difficult,Large ( 350 hours )
