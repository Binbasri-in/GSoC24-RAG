idea title,idea description,skills,difficulty,duration
Control Systems subpackage (sympy.physics.control),"A Control Systems subpackage (sympy.physics.control) was added to SymPy in the summer of 2020, by Naman Gera. This was built upon further by Akshansh Bhatt in 2021 and Anurag Bhat in 2023. It would be great to continue its development and make it more accessible to the public. Since the users are mostly students and researchers in the field of Control theory, a set of problems from a textbook can be solved in the documentation, as the development proceeds. https://www.cds.caltech.edu/~murray/amwiki/Second_Edition.html can be used as a reference.","Python, Git",Intermediate,350 hours
Singularity functions for beam solving in mechanical design,"Singularity functions are a popular tool for solving beam bending stress and deflection problems in mechanical design. This is traditionally done by hand calculations and can be very tedious and error-prone. The deliverable would be a unit tested and documented sub-package for SymPy 2D and 3D beams that can solve many beam problems, add in arbitrary cross sections, plotting, be robust, and add any other relevant features.","Python, Git",Intermediate,350 hours
Generalize the Equations of Motion System Output,"Create an ecosystem where mechanical systems can be defined and created in a general way using joints, bodies, forces, torques, etc. Compute the equations of motion based on different methods like LagrangesMethod and KanesMethod for numerical purposes such as simulations and optimizations.","Python, Git",Advanced,350 hours
Implement and Benchmark Equations of Motion Methods,Develop more methods to derive equations of motion and benchmark them for different models to provide users with insights on which model to use for their application. Implementing methods like NetwonEulersMethod or HamiltonsMethod and creating a benchmark suite for performance evaluation.,"Python, Git",Intermediate,175 or 350 hours
Efficient Equations of Motion Generation,"Improve the speed and simplification of equation of motion generation algorithms in SymPy. Clean up the code base, profile to find slow functions, and optimize trigonometric simplification and other relevant function calls to speed up the EoM generation.","Python, Git",Beginner,350 hours
Implement Specific Forces and Torques,"Develop a set of typical and common forces and torques for mechanical systems. Examples include linear and nonlinear springs and dampers, contact force models, musculotendon models, actuator forces, and aerodynamic forces. Create symbolic mathematical descriptions of the force and torque models.","Python, Git",Beginner to intermediate,350 hours
Constructing Systems From Bodies and Joints,"Construct multibody systems by specifying descriptions of rigid bodies and the joints and constraints that connect them. Enhance joint definition, add new joints, and develop examples of using the joints framework. Implement quaternion rotations and mobilizer joints for complex motions.","Python, Git",Advanced,350 hours
Implement an O(N) Equations of Motion Method,"Implement a symbolic O(N) method for forming equations of motion for complex multibody systems with evaluation time of O(N) instead of O(N^3). Implement 6D vectors, spatial operators, and recursive methods for significant speed boost in numerical evaluation.","Python, Git",Extremely Advanced,350 hours
Enhancing the flexibility of MatchPy,"Enhance MatchPy by restructuring its node type identification, iteration criteria, and wildcard definitions. Replace type checks with custom node identification and iteration rules for greater flexibility in working with various expression tree structures. Explore the possibility of a Rust implementation of MatchPy for speed and efficiency enhancements.","Python, MatchPy",Advanced,350 hours
Code Generation,"Enhance the code generation system in SymPy by adding support for more AST nodes, parallel code generation using OpenMP directives, and matrix operations. Extend printers to support new AST nodes and improve support for working with matrices directly.","Python, Git",Advanced,Varies
